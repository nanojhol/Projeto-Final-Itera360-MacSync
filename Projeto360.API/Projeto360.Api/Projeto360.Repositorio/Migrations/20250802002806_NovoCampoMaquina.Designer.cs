// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto360Final.Repositorio.Contexto;

#nullable disable

namespace Projeto360.Repositorio.Migrations
{
    [DbContext(typeof(Projeto360FinalContexto))]
    [Migration("20250802002806_NovoCampoMaquina")]
    partial class NovoCampoMaquina
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.ChamadoSuporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estabelecimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Em aberto");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ChamadosSuporte", (string)null);
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.Estabelecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Endereco")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Estabelecimentos", (string)null);
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.LogDeAcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoDetalhada")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("EntidadeAfetada")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EntidadeIdAfetada")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogsDeAcao", (string)null);
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcaoPendente")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("AguardandoResposta")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHoraEnvioComando")
                        .HasColumnType("datetime2");

                    b.Property<double>("Disco")
                        .HasMaxLength(25)
                        .HasColumnType("float");

                    b.Property<int>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Memoria")
                        .HasMaxLength(25)
                        .HasColumnType("float");

                    b.Property<DateTime>("PrimeiraAtivacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusDispositivo")
                        .HasColumnType("int");

                    b.Property<int>("StatusUtilizacao")
                        .HasColumnType("int");

                    b.Property<string>("TipoDispositivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorUtilizacao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("Maquinas", (string)null);
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.RegistroAcionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataHoraEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraResposta")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<string>("MensagemErro")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Sucesso")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MaquinaId");

                    b.ToTable("RegistrosAcionamento", (string)null);
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.RegistroUtilizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcaoRealizada")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCobrado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MaquinaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegistrosUtilizacao", (string)null);
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.SugestaoIA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataGeracao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Disco")
                        .HasColumnType("int");

                    b.Property<int>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("Memoria")
                        .HasColumnType("int");

                    b.Property<string>("TipoInsight")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.HasIndex("MaquinaId");

                    b.ToTable("SugestoesIA", (string)null);
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Saldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoConta")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TokenExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TokenRecuperacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenRecuperacaoSenha")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.ChamadoSuporte", b =>
                {
                    b.HasOne("Projeto360Final.Dominio.Entidades.Estabelecimento", "Estabelecimentos")
                        .WithMany("Chamados")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto360Final.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Chamados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estabelecimentos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.LogDeAcao", b =>
                {
                    b.HasOne("Projeto360Final.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Logs")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.Maquina", b =>
                {
                    b.HasOne("Projeto360Final.Dominio.Entidades.Estabelecimento", "Estabelecimento")
                        .WithMany("Maquinas")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.RegistroAcionamento", b =>
                {
                    b.HasOne("Projeto360Final.Dominio.Entidades.Maquina", "Maquina")
                        .WithMany("Acionamentos")
                        .HasForeignKey("MaquinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Maquina");
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.RegistroUtilizacao", b =>
                {
                    b.HasOne("Projeto360Final.Dominio.Entidades.Maquina", "Maquina")
                        .WithMany("Utilizacoes")
                        .HasForeignKey("MaquinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto360Final.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Utilizacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Maquina");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.SugestaoIA", b =>
                {
                    b.HasOne("Projeto360Final.Dominio.Entidades.Estabelecimento", "Estabelecimento")
                        .WithMany()
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Projeto360Final.Dominio.Entidades.Maquina", "Maquina")
                        .WithMany()
                        .HasForeignKey("MaquinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estabelecimento");

                    b.Navigation("Maquina");
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.Usuario", b =>
                {
                    b.HasOne("Projeto360Final.Dominio.Entidades.Estabelecimento", "Estabelecimento")
                        .WithMany("Coordenadores")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.Estabelecimento", b =>
                {
                    b.Navigation("Chamados");

                    b.Navigation("Coordenadores");

                    b.Navigation("Maquinas");
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.Maquina", b =>
                {
                    b.Navigation("Acionamentos");

                    b.Navigation("Utilizacoes");
                });

            modelBuilder.Entity("Projeto360Final.Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("Chamados");

                    b.Navigation("Logs");

                    b.Navigation("Utilizacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
